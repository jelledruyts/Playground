#################### PREREQUISITES ####################

# The commands below should be executed in bash with the following prerequisites installed
# (note that these are all preinstalled on Azure Cloud Shell):
# - Azure CLI (https://docs.microsoft.com/cli/azure/install-azure-cli)
# - jq

#################### ADMINISTRATOR ####################

# Set configuration variables.
TENANT_ID=MSDx413347.onmicrosoft.com

# Login interactively.
az login --tenant $TENANT_ID

# Create the Service Principal representing the app that needs to reset the credentials of other apps.
WORKLOAD_SP=$(az ad sp create-for-rbac --name CredentialResetter)
WORKLOAD_APPID=$(echo $WORKLOAD_SP | jq -r .appId)
WORKLOAD_SP_OBJECTID=$(az ad sp list --filter "appId eq '$WORKLOAD_APPID'" --query "[0].id" -o tsv)
WORKLOAD_SP_PASSWORD=$(echo $WORKLOAD_SP | jq -r .password)
echo "CredentialResetter Service Principal created: App ID '$WORKLOAD_APPID', Object ID '$WORKLOAD_SP_OBJECTID'."

# Create a target app representing the Arc onboarding script.
TARGET_APP=$(az ad app create --display-name ArcOnboarder)
TARGET_APPID=$(echo $TARGET_APP | jq -r .appId)
TARGET_APP_OBJECTID=$(echo $TARGET_APP | jq -r .id)
echo "ArcOnboarder App created: App ID '$TARGET_APPID', Object ID '$TARGET_APP_OBJECTID'."

# Look up the object ID of the service principal representing the Microsoft Graph API in the current tenant.
GRAPH_APPID=00000003-0000-0000-c000-000000000000
GRAPH_SP_OBJECTID=$(az ad sp list --filter "appId eq '$GRAPH_APPID'" --query "[0].id" -o tsv)

# Grant the CredentialResetter the "Application.ReadWrite.OwnedBy" application permission on Microsoft Graph
# so that it can control apps it owns.
# See https://learn.microsoft.com/graph/permissions-reference?view=graph-rest-1.0#all-permissions-and-ids.
GRAPH_APPROLEID=18a4783c-866b-4cc7-a460-3d5e5662c884
az rest -m POST -u https://graph.microsoft.com/v1.0/servicePrincipals/$WORKLOAD_SP_OBJECTID/appRoleAssignments -b '{
    "principalId": "'$WORKLOAD_SP_OBJECTID'",
    "resourceId": "'$GRAPH_SP_OBJECTID'",
    "appRoleId": "'$GRAPH_APPROLEID'"
}'

# Make the CredentialResetter an owner of the ArcOnboarder app's service principal, so it can reset the ArcOnboarder
# app's credentials, without the CredentialResetter app having any directory role itself.
az rest -m POST -u https://graph.microsoft.com/v1.0/applications/$TARGET_APP_OBJECTID/owners/\$ref -b '{
    "@odata.id": "https://graph.microsoft.com/v1.0/directoryObjects/'$WORKLOAD_SP_OBJECTID'"
}'

#################### WORKLOAD IDENTITY ####################

az login --service-principal -u $WORKLOAD_APPID -p $WORKLOAD_SP_PASSWORD --tenant $TENANT_ID --allow-no-subscriptions

az ad app credential reset --id $TARGET_APP_OBJECTID --end-date "2023-04-01"

#################### ADMINISTRATOR ####################

# Since the Workload Identity was logged in to the Azure CLI, login interactively again.
az login --tenant $TENANT_ID

# Remove the target app.
az ad app delete --id $TARGET_APPID

# Remove the Workload Identity.
az ad app delete --id $WORKLOAD_APPID
