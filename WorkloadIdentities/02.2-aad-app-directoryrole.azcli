#################### ADMINISTRATOR ####################

# Grant the Workload Identity the "Cloud Application Administrator" directory role in Azure AD.
# See https://learn.microsoft.com/azure/active-directory/roles/permissions-reference#cloud-application-administrator.
# See https://learn.microsoft.com/azure/active-directory/roles/custom-assign-graph.
DIRECTORY_ROLEID=158c047a-c907-4556-b7ef-446551a6b5f7
az rest -m POST -u https://graph.microsoft.com/v1.0/roleManagement/directory/roleAssignments -b '{
    "principalId": "'$SP_OBJECTID'",
    "roleDefinitionId": "'$DIRECTORY_ROLEID'",
    "directoryScopeId": "/"
}'

#################### WORKLOAD IDENTITY ####################

# Use a client credentials flow to acquire a token from Azure AD for the service principal, targeting the Microsoft Graph.
SP_AUTH=$(curl -s -X POST -d "grant_type=client_credentials&client_id=$SP_APPID&client_secret=$SP_PASSWORD&scope=https://graph.microsoft.com/.default" https://login.microsoftonline.com/$TENANT_ID/oauth2/v2.0/token)
SP_TOKEN=$(echo $SP_AUTH | jq -r .access_token)

# For debugging purposes, show the directory roles contained in the access token as the "wids" claim.
SP_TOKEN_PARTS=(${SP_TOKEN//./ })
SP_TOKEN_DIRECTORYROLES=$(echo ${SP_TOKEN_PARTS[1]} | base64 -d | jq .wids)
echo "Directory roles: $SP_TOKEN_DIRECTORYROLES"

# Call the Microsoft Graph API using the token and list all apps (using the granted "Application.ReadWrite.OwnedBy" permission).
APPS=$(curl -s -X GET -H "Authorization: Bearer $SP_TOKEN" https://graph.microsoft.com/v1.0/applications)

# Attempt to update the display name of an existing app (this should succeed).
APPS_FIRST_ID=$(echo $APPS | jq -r ".value | .[0].id")
APPS_FIRST_DISPLAYNAME=$(echo $APPS | jq -r ".value | .[0].displayName")
echo "First app's display name: '$APPS_FIRST_DISPLAYNAME'"
curl -s -X PATCH -H "Authorization: Bearer $SP_TOKEN" -H "Content-Type: application/json" https://graph.microsoft.com/v1.0/applications/$APPS_FIRST_ID -d '{
    "displayName": "'$APPS_FIRST_DISPLAYNAME' - UPDATED"
}'

# Change the display name back to the original value.
curl -s -X PATCH -H "Authorization: Bearer $SP_TOKEN" -H "Content-Type: application/json" https://graph.microsoft.com/v1.0/applications/$APPS_FIRST_ID -d '{
    "displayName": "'$APPS_FIRST_DISPLAYNAME'"
}'

# Create a new app (this should succeed).
OWNED_APP=$(curl -s -X POST -H "Authorization: Bearer $SP_TOKEN" -H "Content-Type: application/json" https://graph.microsoft.com/v1.0/applications -d '{
    "displayName": "'$PREFIX'-App-1"
}')

# Modify the new app, which is "owned by" the Workload Identity (so this should succeed).
OWNED_APP_APPID=$(echo $OWNED_APP | jq -r .id)
curl -s -X PATCH -H "Authorization: Bearer $SP_TOKEN" -H "Content-Type: application/json" https://graph.microsoft.com/v1.0/applications/$OWNED_APP_APPID -d '{
    "displayName": "'$PREFIX'-App-1-UPDATED"
}'

# Delete the new app.
curl -s -X DELETE -H "Authorization: Bearer $SP_TOKEN" https://graph.microsoft.com/v1.0/applications/$OWNED_APP_APPID
