# In this scenario, the workload identity is granted an Azure role so that it can
# deploy Azure resources through Azure Resource Manager.

#################### PREREQUISITES ####################

# The commands below should be executed in bash with the following prerequisites installed
# (note that these are all preinstalled on Azure Cloud Shell):
# - Azure CLI (https://docs.microsoft.com/cli/azure/install-azure-cli)
# - curl
# - jq

#################### ADMINISTRATOR ####################

# Set configuration variables.
TENANT_ID=MSDx413347.onmicrosoft.com
PREFIX=WI-
RESOURCEGROUP_NAME="$PREFIX"ResourceGroup
REGION="westeurope"

# Login interactively.
az login --tenant $TENANT_ID

# Create the Service Principal representing the Workload Identity.
WORKLOAD_SP=$(az ad sp create-for-rbac --name "$PREFIX"WorkloadIdentity)
WORKLOAD_APPID=$(echo $WORKLOAD_SP | jq -r .appId)
WORKLOAD_SP_OBJECTID=$(az ad sp list --filter "appId eq '$WORKLOAD_APPID'" --query "[0].id" -o tsv)
WORKLOAD_SP_PASSWORD=$(echo $WORKLOAD_SP | jq -r .password)
echo "Workload Identity Service Principal created: App ID '$WORKLOAD_APPID', Object ID '$WORKLOAD_SP_OBJECTID'."

# Create a resource group to allow the Workload Identity to deploy into.
RESOURCEGROUP=$(az group create --name $RESOURCEGROUP_NAME --location $REGION)
RESOURCEGROUP_ID=$(echo $RESOURCEGROUP | jq -r .id)

# Add the Workload Identity as a Contributor to the resource group.
az role assignment create --assignee-object-id $WORKLOAD_SP_OBJECTID --assignee-principal-type ServicePrincipal --role Contributor --scope $RESOURCEGROUP_ID

#################### WORKLOAD IDENTITY ####################

# Log in to the Azure CLI as the Workload Identity.
az login --service-principal --username $WORKLOAD_APPID --password $WORKLOAD_SP_PASSWORD --tenant $TENANT_ID

# Create a Storage Account using the Contributor permissions on the resource group.
STORAGEACCOUNT_NAME="$PREFIX"storage"$RANDOM"
STORAGEACCOUNT_NAME=${STORAGEACCOUNT_NAME,,} # Convert to lowercase.
STORAGEACCOUNT_NAME=${STORAGEACCOUNT_NAME//[^[:alnum:]]/} # Remove any non-alphanumeric characters.
az storage account create --name $STORAGEACCOUNT_NAME --resource-group $RESOURCEGROUP_NAME --sku Standard_LRS

# Remove the Storage Account.
az storage account delete --name $STORAGEACCOUNT_NAME --resource-group $RESOURCEGROUP_NAME --yes

#################### ADMINISTRATOR ####################

# Since the Workload Identity was logged in to the Azure CLI, login interactively again.
az login --tenant $TENANT_ID

# Remove the resource group.
az group delete --name $RESOURCEGROUP_NAME --yes

# Remove the Workload Identity.
az ad app delete --id $WORKLOAD_APPID
