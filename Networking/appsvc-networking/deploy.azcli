# Define parameters.
RESOURCE_GROUP=jdappsvcnet
LOCATION=westeurope

# Log in.
az login

# Create the deployment resource group.
az group create --name $RESOURCE_GROUP --location $LOCATION

# Download deployment bicep file (Azure CLI cannot deploy remote bicep files today).
wget https://raw.githubusercontent.com/Azure-Samples/app-service-networking-samples/main/deploy/main.bicep

# Get current user information for setting up SQL admin.
AAD_USERNAME=$(az ad signed-in-user show --query userPrincipalName --output tsv)
AAD_SID=$(az ad signed-in-user show --query objectId --output tsv)

# Deploy the bicep file.
az deployment group create \
  --name $RESOURCE_GROUP \
  --resource-group $RESOURCE_GROUP \
  --template-file ./main.bicep \
  --parameters name=$RESOURCE_GROUP aadUsername=$AAD_USERNAME aadSid=$AAD_SID

# Retrieve the name of the App Service managed identity.
APPSVC_IDENTITY=$(az deployment group show \
  --resource-group $RESOURCE_GROUP \
  --name $RESOURCE_GROUP \
  --query properties.outputs.principalId.value --output tsv)

# Create a SQL file to execute on the database which grants access to the App Service managed identity.
cat <<EOT> dbuser.sql
CREATE USER $APPSVC_IDENTITY FROM EXTERNAL PROVIDER;
ALTER ROLE db_datareader ADD MEMBER $APPSVC_IDENTITY;
ALTER ROLE db_datawriter ADD MEMBER $APPSVC_IDENTITY;
ALTER ROLE db_ddladmin ADD MEMBER $APPSVC_IDENTITY;
GO;
EOT

# Optional: allow the local IP address to pass through the SQL firewall.
SQLSERVER_NAME=$(az deployment group show \
  --resource-group $RESOURCE_GROUP \
  --name $RESOURCE_GROUP \
  --query properties.outputs.sqlserverNameprincipalId.value --output tsv)
LOCAL_IP="`wget -qO- http://ipinfo.io/ip`"
az sql server firewall-rule create \
  --resource-group $RESOURCE_GROUP \
  --server $SQLSERVER_NAME \
  --name AllowLocalIP \
  --start-ip-address $LOCAL_IP \
  --end-ip-address $LOCAL_IP

# MANUAL ACTION:
# Use sqlcmd or the SQL query editor in the Azure portal to execute the above SQL file on the database.
